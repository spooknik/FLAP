#################################################################################################################
#############################################_____ _      __   ____  ############################################
############################################|  ___| |     \_\ |  _ \ ############################################
########################################### | |_  | |     /_\ | |_) |############################################
############################################|  _| | |___ / _ \|  __/ ############################################
############################################|_|   |_____/_/ \_\_|    ############################################
#################################################################################################################
#
# [Filament Loading À la Prusa]
# 
# Project Page https://github.com/spooknik/FLAP
#
# V1.4 - Flap-ocalypse
#################################################################################################################
#################################################################################################################
[gcode_macro _TEMP_VARIABLES]    

# Add or remove your own materials here. Format: ["ABS",240,220,100] ["Material",Load Temp, Min Load Temp, Bed Temp]
variable_materials: [["ABS",240,220,100],["ASA",260,240,105],["PETG",230,210,85],["PLA",215,200,60],
                    ["FLEX",215,200,60],["PC",260,240,105],["PA",290,280,50]]

# NO TOUCH #
variable_user_load_temp: 0
variable_user_min_load_temp: 0
variable_user_bed_temp: 0
gcode:

# BEGIN LOAD #

[gcode_macro LOAD_PROMPT] # Thank you why_me!
gcode:
  {% set materials = printer['gcode_macro _TEMP_VARIABLES'].materials %}
  RESPOND TYPE=command MSG="action:prompt_begin Preheat for Load"
  RESPOND TYPE=command MSG="action:prompt_text Insert filament and choose a material"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  {% for idx in range(0, materials|length) %}
    {% set s = "action:prompt_button " + materials[idx][0] + ' - ' + materials[idx][1]|string + '/' + materials[idx][3]|string + "|LOAD_FILAMENT INDEX='" + idx|string + "'" %} # Thank you Aubey!
    RESPOND TYPE=command MSG="{s}"
  {% endfor %}
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro LOAD_FILAMENT]
gcode:
  {% set index = params.INDEX|int %}
  {% set material = printer['gcode_macro _TEMP_VARIABLES'].materials[index] %}
  
  RESPOND TYPE=command MSG=action:prompt_end # Close the prompt
    
  M118 FLAP: {material[0]} Selected
  SET_GCODE_VARIABLE MACRO=_TEMP_VARIABLES VARIABLE=user_load_temp VALUE={material[1]} 
  SET_GCODE_VARIABLE MACRO=_TEMP_VARIABLES VARIABLE=user_min_load_temp VALUE={material[2]} 
  SET_GCODE_VARIABLE MACRO=_TEMP_VARIABLES VARIABLE=user_bed_temp VALUE={material[3]}
  # Save https://www.klipper3d.org/Command_Templates.html#save-variables-to-disk
  # This is the only point where variables are written to disk. This is kept to a minimum. 
  SAVE_VARIABLE VARIABLE=user_load_temp VALUE={material[1]} 
  SAVE_VARIABLE VARIABLE=user_min_load_temp VALUE={material[2]} 
  SAVE_VARIABLE VARIABLE=user_bed_temp VALUE={material[3]}
  filament_load

  # END LOAD #
  # BEGIN UNLOAD #

[gcode_macro UNLOAD_PROMPT] # Thank you why_me!
gcode:
  {% set materials = printer['gcode_macro _TEMP_VARIABLES'].materials %}
  RESPOND TYPE=command MSG="action:prompt_begin Preheat for unload"
  RESPOND TYPE=command MSG="action:prompt_text  Which material are you unloading?"
  RESPOND TYPE=command MSG="action:prompt_button_group_start"
  {% for idx in range(0, materials|length) %}
    {% set s = "action:prompt_button " + materials[idx][0] + ' - ' + materials[idx][1]|string + '°C' + "|UNLOAD_FILAMENT INDEX='" + idx|string + "'" %} # Thank you Aubey!
    RESPOND TYPE=command MSG="{s}"
  {% endfor %}
  RESPOND TYPE=command MSG="action:prompt_button_group_end"
  RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set index = params.INDEX|int %}
  {% set material = printer['gcode_macro _TEMP_VARIABLES'].materials[index] %}
  
  RESPOND TYPE=command MSG=action:prompt_end # Close the prompt
    
  M118 FLAP: {material[0]} Selected
  SET_GCODE_VARIABLE MACRO=_TEMP_VARIABLES VARIABLE=user_load_temp VALUE={material[1]} 
  SET_GCODE_VARIABLE MACRO=_TEMP_VARIABLES VARIABLE=user_min_load_temp VALUE={material[2]} 
  SET_GCODE_VARIABLE MACRO=_TEMP_VARIABLES VARIABLE=user_bed_temp VALUE={material[3]}
  filament_unload

  # END UNLOAD #
  # BEGIN PROMPTS #

[gcode_macro PURGE_PROMPT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Loading Filament"
    RESPOND TYPE=command MSG="action:prompt_text Is the filament loaded correctly?"
    RESPOND TYPE=command MSG="action:prompt_footer_button YES|PURGE_FINISH|primary"
    RESPOND TYPE=command MSG="action:prompt_footer_button PURGE MORE|TEMP_CHECK"
    RESPOND TYPE=command MSG="action:prompt_footer_button RETRY|RETRY_LOAD_TEMP" # unloads and loads again
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro LOAD_RETRY_PROMPT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Retry Loading"
    RESPOND TYPE=command MSG="action:prompt_text Insert Filament and press OKAY to load"
    RESPOND TYPE=command MSG="action:prompt_footer_button Okay|RETRY_LOAD2|primary"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro COLOR_PROMPT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Color Change"
    RESPOND TYPE=command MSG="action:prompt_text Press OKAY to unload filament."
    RESPOND TYPE=command MSG="action:prompt_footer_button OKAY|COLOR_CHANGE|primary"
    RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|CANCEL_MACRO|warning" 
    RESPOND TYPE=command MSG="action:prompt_show" 

[gcode_macro RUNOUT_PROMPT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Filament Runout Detected"
    RESPOND TYPE=command MSG="action:prompt_text The print is paused. Press OKAY to unload."
    RESPOND TYPE=command MSG="action:prompt_footer_button Unload|TEMP_CHECK_RUNOUT|primary" # Exit
    RESPOND TYPE=command MSG="action:prompt_footer_button Cancel Print|CANCEL_MACRO|warning" #CANCEL_PRINT
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro INSERT_NEW_PROMPT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Load New Filament"
    RESPOND TYPE=command MSG="action:prompt_text Insert new filament and press OKAY to load"
    RESPOND TYPE=command MSG="action:prompt_footer_button OKAY|TEMP_CHECK_RUNOUT2|primary" # Load
    RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL PRINT|CANCEL_MACRO|warning" # #CANCEL_PRINT
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro RESTORE_PROMPT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Filament Loaded"
    RESPOND TYPE=command MSG="action:prompt_text Press OKAY to resume print."
    RESPOND TYPE=command MSG="action:prompt_footer_button RESUME |RESUME_RUNOUT|primary" # Load
    RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL PRINT|CANCEL_MACRO|warning" # #CANCEL_PRINT
    RESPOND TYPE=command MSG="action:prompt_show"


[gcode_macro NO_FILAMENT_PROMPT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin No Filament Detected"
    RESPOND TYPE=command MSG="action:prompt_text Please insert filament and press OKAY"
    RESPOND TYPE=command MSG="action:prompt_footer_button OKAY|TEMP_CHECK_RUNOUT2|primary" # Next
    RESPOND TYPE=command MSG="action:prompt_footer_button CANCEL|CANCEL_MACRO|warning" #CANCEL_PRINT
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro UNLOAD_COMPLETE]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Unload Complete"
    RESPOND TYPE=command MSG="action:prompt_text Remove filament from printer and press Okay"
    RESPOND TYPE=command MSG="action:prompt_footer_button Okay|UNLOAD_FINAL|primary"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro RESUME_READY]
gcode:
    RESPOND TYPE=command MSG="action:prompt_begin Filament Loaded"
    RESPOND TYPE=command MSG="action:prompt_text Press OKAY to resume print"
    RESPOND TYPE=command MSG="action:prompt_footer_button Okay|UNLOAD_FINAL|primary"
    RESPOND TYPE=command MSG="action:prompt_footer_button Cancel|CANCEL_MACRO|warning" #CANCEL_PRINT
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro PURGING_PROMTP]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end" # Close the prompt
    RESPOND TYPE=command MSG="action:prompt_begin Purging Filament"
    RESPOND TYPE=command MSG="action:prompt_text Purging Filament..."
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro UNLOADING_PROMPT]
gcode:
    RESPOND TYPE=command MSG="action:prompt_end" # Close the prompt
    RESPOND TYPE=command MSG="action:prompt_begin Unloading Filament"
    RESPOND TYPE=command MSG="action:prompt_text Unloading Filament..."
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro PURGE_READY]
gcode: 
    RESPOND TYPE=command MSG="action:prompt_end" # Close the prompt
    RESPOND TYPE=command MSG="action:prompt_begin Load"
    RESPOND TYPE=command MSG="action:prompt_text Push Filament into Extruder and click load"
    RESPOND TYPE=command MSG="action:prompt_footer_button load|filament_purge|primary"
    RESPOND TYPE=command MSG="action:prompt_show"

# END PROMPTS #

[gcode_macro TEMPERATURE_WAIT_RESPONSIVE]
gcode:
    M118 FLAP: Temperature with updating Prompt running!
    {% if 'MINIMUM' not in params %}
        RESPOND TYPE=error MSG="MINIMUM parameter is required!"
    {% endif %}
    {% if 'SENSOR' not in params %}
        RESPOND TYPE=error MSG="SENSOR parameter is required!"
    {% endif %}
    {% set sensor_name = params.SENSOR %}
    {% if sensor_name not in printer %}
        RESPOND TYPE=error MSG="Invalid SENSOR name: {sensor_name}! Sensor not in printer!"
    {% endif %}
    {% set target_temp = params.MINIMUM|float %}
    # Loop to check temperature for up to 10 minutes
    {% for _ in range(60 * 10) %}  # Wait up to 10 minutes (600 iterations)
      {% set current_temp = printer[sensor_name].temperature %}
      {% if current_temp >= target_temp %}
          # Hotend Temp reached, breaking out of loop
          break
      {% endif %}
      # Hotend Temp not reached, showing prompt
      {% set s = "action:prompt_text Heating Hotend... Currently at {:.1f}°C/{:.1f}°C".format(current_temp, target_temp) %}
      RESPOND TYPE=command MSG="action:prompt_end"
      RESPOND TYPE=command MSG="action:prompt_begin Heating Hotend Update"
      RESPOND TYPE=command MSG="{s}"
      RESPOND TYPE=command MSG="action:prompt_show"
      
      # Wait 1s before checking and updating screen
      G4 P1000
    {% endfor %}
    # Check if loop ended without reaching target temp
    {% if current_temp < target_temp %}
      M118 FLAP: Waiting for Temperature timed out!
    {% endif %}

[gcode_macro RETRY_LOAD_TEMP] 
gcode:
    RESPOND TYPE=command MSG=action:prompt_end
    SET_GCODE_VARIABLE MACRO=filament_unload VARIABLE=unloadbusy VALUE=0 # I dunno why, but if it works...
    SET_GCODE_VARIABLE MACRO=_SENSOR_VARIABLES VARIABLE=load_retry VALUE=1
    {% set temp = printer['gcode_macro _TEMP_VARIABLES'] %}
    M118 FLAP: Checking if extruder is ready...
    {% if (printer.extruder.target == 0) %}
      #REHEAT_HOTEND_RUNOUT
      M118 FLAP: Hotend not heated, reheating...
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp.user_load_temp}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp.user_load_temp}
      M118 FLAP: Hotend heated
      RETRY_LOAD
    {% else %} 
      RETRY_LOAD
    {% endif %}


[gcode_macro RETRY_LOAD] 
gcode:
    RESPOND TYPE=command MSG=action:prompt_end
    M118 FLAP: Unloading...
    filament_unload_init

[gcode_macro RETRY_LOAD2] 
gcode:
    RESPOND TYPE=command MSG=action:prompt_end
    {% set temp = printer['gcode_macro _TEMP_VARIABLES'] %}
    M118 FLAP: Checking if extruder is ready...
    {% if (printer.extruder.target == 0) %}
      M118 FLAP: Hotend not heated, reheating...
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp.user_load_temp}
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp.user_load_temp}
      M118 FLAP: Hotend heated
      SET_GCODE_VARIABLE MACRO=_SENSOR_VARIABLES VARIABLE=load_retry VALUE=0
      filament_load
    {% else %} 
      SET_GCODE_VARIABLE MACRO=_SENSOR_VARIABLES VARIABLE=load_retry VALUE=0
      filament_load
    {% endif %}


[gcode_macro COLOR_CHANGE] 
gcode:
    RESPOND TYPE=command MSG=action:prompt_end
    M118 FLAP: Color Change Started
    TEMP_CHECK_RUNOUT
    

[gcode_macro UNLOAD_FINAL] 
gcode:
    {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}
    RESPOND TYPE=command MSG=action:prompt_end
    {% if (sensor.load_retry == 1) %}
      {% if (sensor.paused_state == 1) %} 
        LOAD_RETRY_PROMPT
      {% endif %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=filament_load VARIABLE=loadbusy VALUE=0
    M118 FLAP: Filament unload complete!


[gcode_macro TEMP_CHECK] 
# Because we called a prompt while the hotend is heated  we don't know how long it takes the user to interact
# Idle Timeout could have kicked in and the hotend could be cold. 
# So we need to double check the temps are good.
gcode:
    RESPOND TYPE=command MSG=action:prompt_end
    {% set temp = printer['gcode_macro _TEMP_VARIABLES'] %} 
    M118 FLAP: Checking if extruder is ready...
    #{% if (printer.extruder.can_extrude|lower != 'true') or (printer.extruder.target < temp.user_load_temp) %} # checking one last time for minimum extrusion temperature
    #{% if printer.extruder.target < temp.user_load_temp %}
    {% if(printer.extruder.target == 0) %}
      REHEAT_HOTEND
      M118 FLAP: Hotend not heated, reheating...
    #{% elif printer.extruder.target = temp.user_load_temp %} maybe
    {% else %} 
      filament_purge
      M118 FLAP: Hotend heated, purging...
    {% endif %}
    

[gcode_macro REHEAT_HOTEND]
gcode:
    RESPOND TYPE=command MSG=action:prompt_end
    {% set temp = printer['gcode_macro _TEMP_VARIABLES'] %} 
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp.user_load_temp}
    M118 FLAP: Hotend reheating!
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp.user_load_temp}
    M118 FLAP: Hotend ready! 
    filament_purge

[gcode_macro TEMP_CHECK_RUNOUT] 
# Because we called a prompt while the hotend is heated  we don't know how long it takes the user to interact
# Idle Timeout could have kicked in and the hotend could be cold. 
# So we need to double check the temps are good.
gcode:
    RESPOND TYPE=command MSG=action:prompt_end
    {% set temp = printer['gcode_macro _TEMP_VARIABLES'] %} 
    M118 FLAP: Checking if extruder is ready...
    {% if (printer.extruder.target == 0) %}
      #REHEAT_HOTEND_RUNOUT
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp.user_load_temp}
      M118 FLAP: Hotend reheating!
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp.user_load_temp}
      M118 FLAP: Hotend ready! 
      filament_change_state2
    {% else %} 
      filament_change_state2
      M118 FLAP: Hotend is heated
    {% endif %}
    

[gcode_macro REHEAT_HOTEND_RUNOUT]
gcode:
    RESPOND TYPE=command MSG=action:prompt_end
    {% set temp = printer['gcode_macro _TEMP_VARIABLES'] %} 
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp.user_load_temp}
    M118 FLAP: Hotend reheating!
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp.user_load_temp}
    M118 FLAP: Hotend ready! 
    filament_change_state2

[gcode_macro TEMP_CHECK_RUNOUT2] 
# Because we called a prompt while the hotend is heated  we don't know how long it takes the user to interact
# Idle Timeout could have kicked in and the hotend could be cold. 
# So we need to double check the temps are good.
gcode:
    RESPOND TYPE=command MSG=action:prompt_end
    {% set temp = printer['gcode_macro _TEMP_VARIABLES'] %} 
    {% if (printer['filament_switch_sensor filament_sense'].filament_detected|lower == 'false')%} # Check if filament is acutally present
      M118 FLAP: No filament loaded  #test
      INSERT_NEW_PROMPT # Go back a step
    {% elif (printer.extruder.target == 0) %}
      REHEAT_HOTEND_RUNOUT2
      M118 Hotend not heated! Reheating...
    {% else %}
      filament_load_runout
      M118 Hotend heated...
    {% endif %}
    #M118 Printer Extruder Target : { printer.extruder.target }
    #M118 User Min Load temp : { temp.user_min_load_temp }
    #M118 User Load temp : { temp.user_load_temp }
    #{% if (printer.extruder.target == 0) %}
    #  REHEAT_HOTEND_RUNOUT2
    #  M118 Hotend not heated! Reheating...
    #{% else %} 
    #  filament_load_runout
    #  M118 Hotend heated...
    #{% endif %}
    

[gcode_macro REHEAT_HOTEND_RUNOUT2]
gcode:
    RESPOND TYPE=command MSG=action:prompt_end
    {% set temp = printer['gcode_macro _TEMP_VARIABLES'] %} 
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp.user_load_temp}
    M118 Hotend reheating!
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp.user_load_temp}
    M118 Hotend ready! 
    filament_load_runout

[gcode_macro PURGE_FINISH]
gcode:
    {% set temp = printer['gcode_macro _TEMP_VARIABLES'] %} 
    {% set sensor = printer['gcode_macro _SENSOR_VARIABLES'] %}
    RESPOND TYPE=command MSG=action:prompt_end
    UPDATE_DELAYED_GCODE ID=clear_unloadbusy DURATION=2 # Need to run this
    M118 FLAP: Filament load complete!
    {% if (sensor.cooldown_load|lower == 'true') %}
      {% if sensor.runout_state == 0 %}
        M118 FLAP: Setting Extruder temp to: {sensor.cooldown_load_temp}
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={sensor.cooldown_load_temp}
      {% endif %}
    {% endif %}
    {% if sensor.runout_state == 1 %}
      {% if (sensor.auto_resume|lower == 'true') %} 
        M118 FLAP: Resuming Print
        RESUME
      {% endif %}
    {% endif %}
    
[gcode_macro CANCEL_MACRO]
gcode:
    RESPOND TYPE=command MSG=action:prompt_end
    CANCEL_PRINT
    M118 Print cancelled

[gcode_macro RUNOUT_STAGE] # This runs between RUNOUT_PROMPT and INSERT_NEW_PROMPT
gcode:
  RESPOND TYPE=command MSG=action:prompt_end # Close the prompt
  # Yea, this is just an info box.

[gcode_macro RESUME_STAGE] # This runs between RUNOUT_PROMPT and INSERT_NEW_PROMPT
gcode:
  RESPOND TYPE=command MSG=action:prompt_end # Close the prompt
  RESUME
  M118 Print resuming...
  
[gcode_macro FILAMENT_LOAD_STAGE] # This runs between RUNOUT_PROMPT and INSERT_NEW_PROMPT
gcode:
  RESPOND TYPE=command MSG=action:prompt_end # Close the prompt
  filament_load


